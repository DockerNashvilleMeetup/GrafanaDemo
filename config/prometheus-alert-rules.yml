groups:
- name: rules/alert.rules
  rules:
  - alert: node_cpu_usage
    expr: 100 - (avg(irate(node_cpu{mode="idle"}[1m])  * on(instance) group_left(node_name) node_meta * 100) by (node_name)) > 50
    for: 1m
    labels:
      severity: warning
    annotations:
      summary: "CPU alert for Swarm node '{{ $labels.node_name }}'"
      description: "Swarm node {{ $labels.node_name }} CPU usage is at {{ humanize $value}}%."
  - alert: node_memory_usage
    expr: sum(((node_memory_MemTotal - node_memory_MemAvailable) / node_memory_MemTotal) * on(instance) group_left(node_name) node_meta * 100) by (node_name) > 80
    for: 1m
    labels:
      severity: warning
    annotations:
      summary: "Memory alert for Swarm node '{{ $labels.node_name }}'"
      description: "Swarm node {{ $labels.node_name }} memory usage is at {{ humanize $value}}%."
  - alert: node_disk_usage
    expr: ((node_filesystem_size{mountpoint="/"} - node_filesystem_free{mountpoint="/"}) * 100 / node_filesystem_size{mountpoint="/"}) * on(instance) group_left(node_name) node_meta > 85
    for: 1m
    labels:
      severity: warning
    annotations:
      summary: "Disk alert for Swarm node '{{ $labels.node_name }}'"
      description: "Swarm node {{ $labels.node_name }} disk usage is at {{ humanize $value}}%."
  - alert: node_disk_fill_rate_6h
    expr: predict_linear(node_filesystem_free{mountpoint="/"}[1h], 6*3600) * on(instance) group_left(node_name) node_meta < 0
    for: 1h
    labels:
      severity: critical
    annotations:
      summary: "Disk fill alert for Swarm node '{{ $labels.node_name }}'"
      description: "Swarm node {{ $labels.node_name }} disk is going to fill up in 6h."
  - alert: task_high_cpu_usage_50
    expr: sum(rate(container_cpu_usage_seconds_total{container_label_com_docker_swarm_task_name=~".+"}[1m])) by (container_label_com_docker_swarm_task_name,container_label_com_docker_swarm_node_id) * 100 > 50
    for: 1m
    annotations:
      summary: "CPU alert for Swarm task '{{ $labels.container_label_com_docker_swarm_task_name }}' on '{{ $labels.container_label_com_docker_swarm_node_id }}'"
      description: "{{ $labels.container_label_com_docker_swarm_task_name }} on '{{ $labels.container_label_com_docker_swarm_node_id }}' CPU usage is at {{ humanize $value}}%."
  - alert: task_high_memory_usage_1g
    expr: sum(container_memory_rss{container_label_com_docker_swarm_task_name=~".+"}) by (container_label_com_docker_swarm_node_id) > 1000000000
    for: 1m
    annotations:
      summary: "Memory alert for Swarm task '{{ $labels.container_label_com_docker_swarm_task_name }}' on '{{ $labels.container_label_com_docker_swarm_node_id }}'"
      description: "{{ $labels.container_label_com_docker_swarm_task_name }} on '{{ $labels.container_label_com_docker_swarm_node_id }}' memory usage is {{ humanize $value}}."
  - alert: service_down
    expr: up == 0
  - alert: APIHighInvocationRate
    expr: sum(rate(gateway_function_invocation_total{code="200"}[10s])) BY (function_name) > 5
    for: 5s
    labels:
      service: gateway
      severity: major
      value: '{{$value}}'
    annotations:
      description: High invocation total on {{ $labels.instance }}
      summary: High invocation total on {{ $labels.instance }}
